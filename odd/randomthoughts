

GetSystemTimeAsFileTime / 10000 - 11,643,609,600,000

sub  esp,8										;
push esp										;
call _GetSystemTimeAsFileTime@4					;
pop  ecx										;ecx low
pop  eax										;eax high
mov  esi,10000									;
div  esi										;
mov  ebx,eax									;
mov  eax,ecx									;
div  esi										; / 10000
sub  edx,11643609600000>>32						;
sub  eax,11643609600000&0xFFFFFFFF				; - 11,643,609,600,000
												; ebx:eax time
xor  eax,0x00000005DEECE66D&0xFFFFFFFF			;
xor  ebx,0x00000005DEECE66D>>32					;
and  eax,0x0000FFFFFFFFFFFF&0xFFFFFFFF			;
and  ebx,0x0000FFFFFFFFFFFF>>32					;
mov  [_randomseed],eax							;
mov  [_randomseed+4],ebx						;


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;



mov  eax,[_randomseed]							;
mov  ebx,[_randomseed+4]						;
xor  eax,0x00000005DEECE66D&0xFFFFFFFF			;
xor  ebx,0x00000005DEECE66D>>32					;
add  eax,0x0B  									;
adc  ebx,0										;
and  eax,0x0000FFFFFFFFFFFF&0xFFFFFFFF			;
and  ebx,0x0000FFFFFFFFFFFF>>32					;
mov  [_randomseed],eax							;
mov  [_randomseed+4],ebx						;

and  eax,0xFFFFFFFFFFC00000&0xFFFFFFFF			;
;and ebx,0xFFFFFFFFFFC00000>>32					;
shld eax,ebx,5									;
shl  ebx,5										;

mov  edx,[_randomseed]							;
mov  ecx,[_randomseed+4]						;
xor  edx,0x00000005DEECE66D&0xFFFFFFFF			;
xor  ecx,0x00000005DEECE66D>>32					;
add  edx,0x0B  									;
adc  ecx,0										;
and  edx,0x0000FFFFFFFFFFFF&0xFFFFFFFF			;
and  ecx,0x0000FFFFFFFFFFFF>>32					;
mov  [_randomseed],edx							;
mov  [_randomseed+4],ecx						;

shrd edx,ecx,21									;
shr  ecx,21										;

add  eax,edx									;
adc  ebx,ecx									; ebx:eax integer result





//////////////////////////////////////////////////////////////////////////////

long seed;

double random() {
	if (firstrand)
		seed = (seed System.currentTimeMillis() ^ 0x00000005DEECE66Dl) & 0x0000FFFFFFFFFFFF;
	seed = (seed * 0x00000005DEECE66Dl + 0xBl) & 0x0000FFFFFFFFFFFF;
	int i = (seed & 0xFFFFFFFFFFC00000) << 5;
	seed = (seed * 0x00000005DEECE66Dl + 0xBl) & 0x0000FFFFFFFFFFFF;
	int j = seed >>> 21;
	return ((long) i + j) / (double) 0x0020000000000000;
}












////////////////////////////////////////////////////////////////////////////////

public Random() {
	this(System.currentTimeMillis());
}

public Random(long seed) {
	setSeed(seed);
}

public synchronized void setSeed(long seed) {
	this.seed = (seed ^ 0x5DEECE66DL) & ((1L << 48) - 1);
	haveNextNextGaussian = false;
}




public double nextDouble() {
	return (((long) next(26) << 27) + next(27)) / (double) (1L << 53);
}

protected synchronized int next(int bits) {
	seed = (seed * 0x5DEECE66DL + 0xBL) & ((1L << 48) - 1);
	return (int) (seed >>> (48 - bits));
}

///////////////////////////////////////////////////////////////////////////////////0